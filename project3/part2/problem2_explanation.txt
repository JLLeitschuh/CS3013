Phase 1: Assume that the Minnesotan drivers follow the convention that whoever arrives at the intersection first proceeds first. Using the language of synchronization primitives, describe the way this intersection is controlled. In what ways is this method suboptimal?

	The intersection is controlled by a FIFO queue.  It is suboptimal because only one car from each direction can utilize the intersection at the same time, even if there is the possibility for two or more to proceed.

Phase 2: In the second iteration of the autonomous driving program, assume that the vehicle will enter an intersection, even if only the front bumper of their car will fit. In what instances can this mindset produce a deadlock? How can such a deadlock be prevented?

	A deadlock occurs when all 4 drivers want to go in a direction that is not a right turn. Each of them will move into their respectivre closest quadrant but no one else will be able to go any further. The easiest to prevent this deadlock is to only allow 3 drivers to go at a time.

	Our solution: Our program creates 15 car threads and adds them to a queue. Three control threads run concurrently to manage the semaphores representing each intersection quadrant. Each thread selects a car from the queue and allows it to cross the intersection. 
